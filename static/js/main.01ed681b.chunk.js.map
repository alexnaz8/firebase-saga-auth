{"version":3,"sources":["helpers/dataMapHelper.js","components/TableUsers.js","components/ModalComponent.js","helpers/formHelper.js","components/SearchComponent.js","firebase.js","components/EditForm.js","components/CreateUserForm.js","components/PaginationWrapper.js","constants/reduxActionTypes.js","redux/userActions.js","containers/Home.js","redux/modalActions.js","components/Login.js","components/SignUp.js","containers/ErrorBoundary.js","components/PrivateRoute.js","App.js","redux/authActions.js","redux/authReducer.js","redux/modalReducer.js","redux/userReducer.js","redux/departmentReducer.js","redux/rootReducer.js","redux/departmentActions.js","redux/sagas.js","redux/store.js","index.js"],"names":["ejectUsersData","data","docs","map","doc","id","TableUsers","users","showUserInfo","showEditUserForm","deleteUser","length","columns","filter","el","tableFieldsArrangment","Set","Object","entries","flat","header","field","key","tableRows","user","Button","variant","onClick","col","className","Table","striped","bordered","size","responsive","connect","modal","title","bodyContent","content","showModal","closeModal","hasForm","React","isValidElement","Modal","show","onHide","Header","closeButton","Title","Body","empID","empName","empActive","empDepartment","makeCapitalized","str","charAt","toUpperCase","slice","toLowerCase","SearchComponent","onUserSearch","Container","Row","Col","md","Form","onSubmit","e","preventDefault","name","target","elements","value","Group","controlId","Label","InputGroup","FormControl","placeholder","aria-label","Append","type","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","EditForm","onClose","departments","useState","setName","isActive","setActive","department","setDepartment","depSelectOptions","dep","i","as","column","sm","Control","onChange","Check","checked","CreateUserForm","setID","PaginationWrapper","totalAmount","itemsCountPerPage","pageRangeDisplayed","activePage","setActivePage","children","itemClass","linkClass","handlePageChange","showPagination","totalItemsCount","authTypes","usersTypes","departmentTypes","modalTypes","getUsersData","setUsers","payload","mapDispatchToProps","setModalContent","clearModalContent","createUser","updateUserData","findUsers","auth","currentUser","modalIsShown","setModalShow","usersForCurrentPage","setUsersForCurrentPage","updateUser","newUserData","useEffect","pagedUsersArray","email","signOut","withRouter","history","handleLogin","useCallback","event","a","async","password","signInWithEmailAndPassword","push","alert","to","handleSignUp","passwordConfirm","createUserWithEmailAndPassword","ErrorBoundary","state","hasError","this","props","error","console","log","Component","RouteComponent","component","rest","render","routeProps","dispatch","setCurrentUser","clearCurrentUser","onAuthStateChanged","basename","exact","path","Home","Login","SignUp","initialState","authReducer","action","modalReducer","userReducer","departmentsReducer","rootReducer","combineReducers","getDepartmentsArray","usersData","setDepartments","workerGetUsers","watchGetUsers","workerDeleteUser","watchDeleteUser","workerCreateUser","watchCreateUser","workerEditUser","watchUpdateUser","workerSearchUsers","watchSearchUsers","workerGetDepartments","watchGetDepartments","rootSaga","newUser","firestore","collection","add","set","fetchData","get","delete","findFireBaseUsers","db","where","getDepartments","call","put","takeEvery","all","sagaMiddleware","createSagaMiddleware","middlewares","logger","store","createStore","composeWithDevTools","applyMiddleware","run","rootElement","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.01ed681b.chunk.js","sourcesContent":["export const ejectUsersData = data =>\r\n    data.docs.map(doc => ({ ...doc.data(), id: doc.id }));\r\nexport const getUnique = data => [\r\n    ...new Set(\r\n        data\r\n            .map(el =>\r\n                Object.entries(el)\r\n                    .map(el => el[0])\r\n                    .filter(el => el !== \"id\")\r\n            )\r\n            .flat(1)\r\n    )\r\n];\r\nexport const tableFieldsArrangment = columns => [\r\n    ...columns.filter(el => el === \"empID\" || el === \"empName\"),\r\n    ...columns.filter(el => el !== \"empID\" && el !== \"empName\")\r\n];\r\n","import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { getUnique, tableFieldsArrangment } from \"../helpers/dataMapHelper\";\r\nconst TableUsers = ({ users, showUserInfo, showEditUserForm, deleteUser }) => {\r\n    if (!users.length) return <h1>Here is no data</h1>;\r\n\r\n    let columns = tableFieldsArrangment(getUnique(users));\r\n\r\n    const header = columns.map(field => <th key={field}>{field}</th>);\r\n    const tableRows = users.map(user => (\r\n        <tr key={user.id}>\r\n            <td>\r\n                <Button variant=\"link\" onClick={() => showUserInfo(user)}>\r\n                    View\r\n                </Button>\r\n            </td>\r\n            <td>\r\n                {\" \"}\r\n                <Button variant=\"link\" onClick={() => showEditUserForm(user)}>\r\n                    Edit\r\n                </Button>\r\n            </td>\r\n            {columns.map(col =>\r\n                col === \"empActive\" ? (\r\n                    <td key={col} className=\"align-middle\">\r\n                        {user[col] ? \"Yes\" : \"No\"}\r\n                    </td>\r\n                ) : (\r\n                    <td key={col} className=\"align-middle\">\r\n                        {user[col]}\r\n                    </td>\r\n                )\r\n            )}\r\n            <td>\r\n                {\" \"}\r\n                <Button variant=\"link\" onClick={() => deleteUser(user)}>\r\n                    Delete\r\n                </Button>\r\n            </td>\r\n        </tr>\r\n    ));\r\n    return (\r\n        <Table striped bordered size=\"sm\" responsive=\"sm\">\r\n            <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th></th>\r\n                    {header}\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>{tableRows}</tbody>\r\n        </Table>\r\n    );\r\n};\r\n\r\nexport default TableUsers;\r\n","import React from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { connect } from \"react-redux\";\r\nconst ModalComponent = ({ title, showModal, closeModal, bodyContent }) => {\r\n    if (!showModal) return null;\r\n    const hasForm = React.isValidElement(bodyContent);\r\n    return (\r\n        <>\r\n            <Modal show={showModal} onHide={closeModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {hasForm ? (\r\n                        bodyContent\r\n                    ) : (\r\n                        <>\r\n                            <p>Employee ID: {bodyContent.empID}</p>\r\n                            <p>Employee name: {bodyContent.empName}</p>\r\n                            <p>\r\n                                Employee is active:{\" \"}\r\n                                {bodyContent.empActive ? \"Yes\" : \"No\"}\r\n                            </p>\r\n                            <p>\r\n                                Employee's department:{\" \"}\r\n                                {bodyContent.empDepartment}\r\n                            </p>\r\n                        </>\r\n                    )}\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ modal }) => ({\r\n    title: modal.title,\r\n    bodyContent: modal.content\r\n});\r\n\r\nexport default connect(mapStateToProps)(ModalComponent);\r\n","export const makeCapitalized = str =>\n    str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n","import React from \"react\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { makeCapitalized } from \"../helpers/formHelper\";\r\n\r\nconst SearchComponent = ({ onUserSearch }) => {\r\n    const getName = e => {\r\n        e.preventDefault();\r\n        let name = e.target.elements.name.value;\r\n        name = makeCapitalized(name);\r\n        onUserSearch(name);\r\n    };\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col md={4}>\r\n                    <Form onSubmit={getName}>\r\n                        <Form.Group controlId=\"search-input\">\r\n                            <Form.Label>Employee Name</Form.Label>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <FormControl\r\n                                    placeholder=\"Type name here\"\r\n                                    aria-label=\"Type name here\"\r\n                                    name=\"name\"\r\n                                />\r\n                                <InputGroup.Append>\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        variant=\"outline-secondary\"\r\n                                    >\r\n                                        Search\r\n                                    </Button>\r\n                                </InputGroup.Append>\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default SearchComponent;\r\n","import firebase from \"firebase\";\r\nimport \"firebase/auth\";\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_DB_URL,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DB_URL,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nexport default firebase;\r\n","import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { makeCapitalized } from \"../helpers/formHelper\";\r\n\r\nconst EditForm = ({ onClose, onSubmit, user, departments }) => {\r\n    const [name, setName] = useState(user.empName);\r\n    const [isActive, setActive] = useState(user.empActive);\r\n    const [department, setDepartment] = useState(user.empDepartment);\r\n    const getUpdatedUserData = e => {\r\n        e.preventDefault();\r\n        onSubmit({\r\n            ...user,\r\n            empName: name,\r\n            empActive: isActive,\r\n            empDepartment: department\r\n        });\r\n    };\r\n    const depSelectOptions = departments.map((dep, i) => (\r\n        <option key={dep + i}>{dep}</option>\r\n    ));\r\n\r\n    return (\r\n        <Form onSubmit={getUpdatedUserData}>\r\n            <Form.Group as={Row} controlId=\"empName\">\r\n                <Form.Label column sm={4}>\r\n                    empName\r\n                </Form.Label>\r\n                <Col sm={8}>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Name\"\r\n                        name=\"empName\"\r\n                        value={name}\r\n                        onChange={({ target }) =>\r\n                            setName(makeCapitalized(target.value))\r\n                        }\r\n                    />\r\n                </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row} controlId=\"epmActive\">\r\n                <Form.Label column sm={4}>\r\n                    isActive\r\n                </Form.Label>\r\n                <Col sm={8} className=\"d-flex align-items-center\">\r\n                    <Form.Check\r\n                        checked={isActive}\r\n                        name=\"empActive\"\r\n                        onChange={({ target }) => setActive(target.checked)}\r\n                    />\r\n                </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row} sm={10} controlId=\"departmentSelect\">\r\n                <Form.Label column sm={4}>\r\n                    empDepartment\r\n                </Form.Label>\r\n                <Col sm={8}>\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        value={department}\r\n                        onChange={({ target }) => setDepartment(target.value)}\r\n                    >\r\n                        {depSelectOptions}\r\n                    </Form.Control>\r\n                </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n                <Col className=\"d-flex justify-content-around\" sm={4}>\r\n                    <Button type=\"submit\" variant=\"secondary\">\r\n                        Save\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={onClose}>\r\n                        Cancel\r\n                    </Button>\r\n                </Col>\r\n            </Form.Group>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default EditForm;\r\n","import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { makeCapitalized } from \"../helpers/formHelper\";\r\n\r\nconst CreateUserForm = ({ onClose, onSubmit }) => {\r\n    const [empID, setID] = useState(0);\r\n    const [name, setName] = useState(\"\");\r\n    const [isActive, setActive] = useState(false);\r\n    const [department, setDepartment] = useState(\"\");\r\n    const createUserObj = e => {\r\n        e.preventDefault();\r\n        onSubmit({\r\n            empID: empID,\r\n            empName: name,\r\n            empActive: isActive,\r\n            empDepartment: department\r\n        });\r\n        setID(+empID + 1);\r\n        setActive(false);\r\n        setName(\"\");\r\n        setDepartment(\"\");\r\n    };\r\n    return (\r\n        <Form onSubmit={createUserObj}>\r\n            <Form.Group as={Row} controlId=\"empID\">\r\n                <Form.Label column sm={4}>\r\n                    empID\r\n                </Form.Label>\r\n                <Col sm={8}>\r\n                    <Form.Control\r\n                        type=\"number\"\r\n                        name=\"empID\"\r\n                        placeholder=\"ID\"\r\n                        value={empID}\r\n                        onChange={({ target }) => setID(target.value)}\r\n                    />\r\n                </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row} controlId=\"empName\">\r\n                <Form.Label column sm={4}>\r\n                    empName\r\n                </Form.Label>\r\n                <Col sm={8}>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        name=\"empName\"\r\n                        placeholder=\"Name\"\r\n                        value={name}\r\n                        onChange={({ target }) =>\r\n                            setName(makeCapitalized(target.value))\r\n                        }\r\n                    />\r\n                </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row} controlId=\"empActive\">\r\n                <Form.Label column sm={4}>\r\n                    isActive\r\n                </Form.Label>\r\n                <Col sm={8} className=\"d-flex align-items-center\">\r\n                    <Form.Check\r\n                        name=\"empActive\"\r\n                        checked={isActive}\r\n                        onChange={({ target }) => setActive(target.checked)}\r\n                    />\r\n                </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row} controlId=\"empDepartment\">\r\n                <Form.Label column sm={4}>\r\n                    empDepartment\r\n                </Form.Label>\r\n                <Col sm={8}>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        name=\"empDepartment\"\r\n                        placeholder=\"Department\"\r\n                        value={department}\r\n                        onChange={({ target }) => setDepartment(target.value)}\r\n                    />\r\n                </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n                <Col className=\"d-flex justify-content-around\" sm={4}>\r\n                    <Button className=\"mx-2\" type=\"submit\" variant=\"secondary\">\r\n                        Create\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={onClose}>\r\n                        Cancel\r\n                    </Button>\r\n                </Col>\r\n            </Form.Group>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default CreateUserForm;\r\n","import React from \"react\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nconst PaginationWrapper = ({\r\n    totalAmount,\r\n    itemsCountPerPage = 4,\r\n    pageRangeDisplayed = 5,\r\n    activePage,\r\n    setActivePage,\r\n    children,\r\n    itemClass = \"page-item\",\r\n    linkClass = \"page-link\"\r\n}) => {\r\n    const handlePageChange = value => {\r\n        setActivePage(value);\r\n    };\r\n    const showPagination = totalAmount > itemsCountPerPage;\r\n    return (\r\n        <Container>\r\n            {showPagination ? (\r\n                <Pagination\r\n                    activePage={activePage}\r\n                    itemsCountPerPage={itemsCountPerPage}\r\n                    totalItemsCount={totalAmount}\r\n                    pageRangeDisplayed={pageRangeDisplayed}\r\n                    onChange={handlePageChange}\r\n                    itemClass={itemClass}\r\n                    linkClass={linkClass}\r\n                />\r\n            ) : null}\r\n            <Row>{children}</Row>\r\n            {showPagination ? (\r\n                <Pagination\r\n                    activePage={activePage}\r\n                    itemsCountPerPage={itemsCountPerPage}\r\n                    totalItemsCount={totalAmount}\r\n                    pageRangeDisplayed={pageRangeDisplayed}\r\n                    onChange={handlePageChange}\r\n                    itemClass={itemClass}\r\n                    linkClass={linkClass}\r\n                />\r\n            ) : null}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default PaginationWrapper;\r\n","export const authTypes = {\r\n    SET_CURRENT_USER: \"SET_CURRENT_USER\",\r\n    CLEAR_CURRENT_USER: \"CLEAR_CURRENT_USER\"\r\n};\r\n\r\nexport const usersTypes = {\r\n    CREATE_USER: \"CREATE_USER\",\r\n    DELETE_USER: \"DELETE_USER\",\r\n    UPDATE_USER: \"UPDATE_USER\",\r\n    GET_USERS_DATA: \"GET_USERS_DATA\",\r\n    SET_USERS: \"SET_USERS\",\r\n    SEARCH_USERS: \"SEARCH_USERS\"\r\n};\r\n\r\nexport const departmentTypes = {\r\n    GET_DEPARTMENTS: \"GET_DEPARTMENTS\",\r\n    SET_DEPARTMENTS: \"SET_DEPARTMENTS\"\r\n};\r\n\r\nexport const modalTypes = {\r\n    SET_MODAL_CONTENT: \"SET_MODAL_CONTENT\",\r\n    CLEAR_MODAL_CONTENT: \"CLEAR_MODAL_CONTENT\"\r\n};\r\n","import { usersTypes } from \"../constants/reduxActionTypes\";\r\n\r\nexport const getUsersData = () => {\r\n    return { type: usersTypes.GET_USERS_DATA };\r\n};\r\n\r\nexport const setUsers = data => ({ type: usersTypes.SET_USERS, payload: data });\r\n\r\nexport const createUser = data => ({\r\n    type: usersTypes.CREATE_USER,\r\n    payload: data\r\n});\r\nexport const updateUser = data => ({\r\n    type: usersTypes.UPDATE_USER,\r\n    payload: data\r\n});\r\nexport const findUsers = name => ({\r\n    type: usersTypes.SEARCH_USERS,\r\n    payload: name\r\n});\r\nexport const deleteUser = user => ({\r\n    type: usersTypes.DELETE_USER,\r\n    payload: user.id\r\n});\r\n","import React, { useEffect, useState } from \"react\";\r\nimport TableUsers from \"../components/TableUsers\";\r\nimport ModalComponent from \"../components/ModalComponent\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport SearchComponent from \"../components/SearchComponent\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport firebase from \"../firebase\";\r\nimport EditForm from \"../components/EditForm\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport CreateUserForm from \"../components/CreateUserForm\";\r\nimport { connect } from \"react-redux\";\r\nimport PaginationWrapper from \"../components/PaginationWrapper\";\r\nimport { clearModalContent, setModalContent } from \"../redux/modalActions\";\r\nimport {\r\n    createUser,\r\n    updateUser,\r\n    deleteUser,\r\n    getUsersData,\r\n    findUsers\r\n} from \"../redux/userActions\";\r\n\r\nconst Home = ({\r\n    currentUser,\r\n    setModalContent,\r\n    clearModalContent,\r\n    users,\r\n    getUsersData,\r\n    createUser,\r\n    updateUserData,\r\n    deleteUser,\r\n    departments,\r\n    findUsers\r\n}) => {\r\n    const [modalIsShown, setModalShow] = useState(false);\r\n    const itemsPerPage = 4;\r\n    const [activePage, setActivePage] = useState(1);\r\n    const [usersForCurrentPage, setUsersForCurrentPage] = useState([]);\r\n    const showModal = () => {\r\n        setModalShow(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setModalShow(false);\r\n        clearModalContent();\r\n    };\r\n\r\n    const updateUser = newUserData => {\r\n        updateUserData(newUserData);\r\n        closeModal();\r\n    };\r\n\r\n    const showUserInfo = user => {\r\n        setModalContent({ title: \"User info\", content: user });\r\n        showModal();\r\n    };\r\n\r\n    const showEditUserForm = user => {\r\n        setModalContent({\r\n            title: \"Edit User\",\r\n            content: (\r\n                <EditForm\r\n                    onClose={closeModal}\r\n                    onSubmit={updateUser}\r\n                    user={user}\r\n                    departments={departments}\r\n                />\r\n            )\r\n        });\r\n        showModal();\r\n    };\r\n\r\n    const showAddUserForm = () => {\r\n        setModalContent({\r\n            title: \"Create User\",\r\n            content: (\r\n                <CreateUserForm\r\n                    onClose={closeModal}\r\n                    onSubmit={createUser}\r\n                    departments={departments}\r\n                />\r\n            )\r\n        });\r\n        showModal();\r\n    };\r\n\r\n    const onUserSearch = name => {\r\n        findUsers(name);\r\n    };\r\n\r\n    const logOut = () => {\r\n        firebase.auth().signOut();\r\n    };\r\n    useEffect(() => {\r\n        getUsersData();\r\n    }, []);\r\n\r\n    //firebase WS part\r\n    /*    useEffect(() => {\r\n        const db = firebase.firestore();\r\n        return db.collection(\"users\").onSnapshot(snapshot => {\r\n            const usersData = snapshot.docs.map(doc => ({\r\n                ...doc.data(),\r\n                id: doc.id\r\n            }));\r\n            setUsers(usersData);\r\n            const departments = [\r\n                ...new Set(usersData.map(user => user.empDepartment))\r\n            ];\r\n            setDepartments(departments);\r\n        });\r\n    }, []);*/\r\n\r\n    useEffect(() => {\r\n        const pagedUsersArray = users.slice(\r\n            itemsPerPage * activePage - itemsPerPage,\r\n            itemsPerPage * activePage\r\n        );\r\n\r\n        if (!pagedUsersArray.length && activePage > 1) {\r\n            setActivePage(activePage - 1);\r\n        } else {\r\n            setUsersForCurrentPage(pagedUsersArray);\r\n        }\r\n    }, [users, activePage, itemsPerPage]);\r\n\r\n    return currentUser ? (\r\n        <Container className={\"my-3\"}>\r\n            <Row>\r\n                <Container className=\"d-flex justify-content-center\">\r\n                    <h5>You are logged in as {currentUser.email}</h5>\r\n                    <Button\r\n                        className=\"mx-2\"\r\n                        variant=\"outline-secondary\"\r\n                        size=\"sm\"\r\n                        onClick={logOut}\r\n                    >\r\n                        LogOut\r\n                    </Button>\r\n                </Container>\r\n\r\n                <SearchComponent onUserSearch={onUserSearch} />\r\n                <Container className=\"pb-2\">\r\n                    <Button\r\n                        type=\"button\"\r\n                        variant=\"light\"\r\n                        onClick={showAddUserForm}\r\n                    >\r\n                        Add Employee\r\n                    </Button>\r\n                </Container>\r\n                <PaginationWrapper\r\n                    totalAmount={users.length}\r\n                    itemsCountPerPage={itemsPerPage}\r\n                    activePage={activePage}\r\n                    setActivePage={setActivePage}\r\n                >\r\n                    <Col>\r\n                        <TableUsers\r\n                            users={usersForCurrentPage}\r\n                            showUserInfo={showUserInfo}\r\n                            showEditUserForm={showEditUserForm}\r\n                            deleteUser={deleteUser}\r\n                        />\r\n                    </Col>\r\n                </PaginationWrapper>\r\n                <ModalComponent\r\n                    showModal={modalIsShown}\r\n                    closeModal={closeModal}\r\n                />\r\n            </Row>\r\n        </Container>\r\n    ) : null;\r\n};\r\n\r\nconst mapStateToProps = ({ auth, data, departments }) => ({\r\n    currentUser: auth.currentUser,\r\n    users: data.users,\r\n    departments: departments.departments\r\n});\r\nconst mapDispatchToProps = {\r\n    setModalContent,\r\n    clearModalContent,\r\n    getUsersData,\r\n    deleteUser,\r\n    createUser,\r\n    updateUserData: updateUser,\r\n    findUsers\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import { modalTypes } from \"../constants/reduxActionTypes\";\r\n\r\nexport const setModalContent = content => {\r\n    return { type: modalTypes.SET_MODAL_CONTENT, payload: content };\r\n};\r\n\r\nexport const clearModalContent = () => {\r\n    return { type: modalTypes.CLEAR_MODAL_CONTENT };\r\n};\r\n","import React, { useCallback } from \"react\";\r\nimport { withRouter, Redirect } from \"react-router\";\r\nimport firebase from \"../firebase\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Login = ({ currentUser, history }) => {\r\n    const handleLogin = useCallback(\r\n        async event => {\r\n            event.preventDefault();\r\n            const { email, password } = event.target.elements;\r\n            try {\r\n                await firebase\r\n                    .auth()\r\n                    .signInWithEmailAndPassword(email.value, password.value);\r\n                history.push(\"/\");\r\n            } catch (error) {\r\n                alert(error);\r\n            }\r\n        },\r\n        [history]\r\n    );\r\n\r\n    if (currentUser) {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1>Log in</h1>\r\n            <Form onSubmit={handleLogin}>\r\n                <Form.Group controlId=\"formEmail\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        placeholder=\"Email\"\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                    />\r\n                </Form.Group>\r\n                <Button type=\"submit\">Log in</Button>\r\n                <span className=\"mx-2\">or</span>\r\n                <Button onClick={() => history.push(\"/signup\")}>Sing Up</Button>\r\n            </Form>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ auth }) => ({ currentUser: auth.currentUser });\r\n\r\nexport default connect(mapStateToProps)(withRouter(Login));\r\n","import React, { useCallback } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport firebase from \"../firebase\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nconst SignUp = ({ history }) => {\r\n    const handleSignUp = useCallback(\r\n        async event => {\r\n            event.preventDefault();\r\n            const {\r\n                email: { value: email },\r\n                password: { value: password },\r\n                passwordConfirm: { value: passwordConfirm }\r\n            } = event.target.elements;\r\n\r\n            if (password === passwordConfirm) {\r\n                try {\r\n                    await firebase\r\n                        .auth()\r\n                        .createUserWithEmailAndPassword(email, password);\r\n                    history.push(\"/\");\r\n                } catch (error) {\r\n                    alert(error);\r\n                }\r\n            } else {\r\n                alert(\"Password and confirmations are different!\");\r\n            }\r\n        },\r\n        [history]\r\n    );\r\n\r\n    return (\r\n        <Container>\r\n            <h1>Sign up</h1>\r\n            <Form onSubmit={handleSignUp}>\r\n                <Form.Group controlId=\"formEmail\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        placeholder=\"Email\"\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Password Confirmation</Form.Label>\r\n                    <Form.Control\r\n                        name=\"passwordConfirm\"\r\n                        type=\"password\"\r\n                        placeholder=\"Repeat Your Password\"\r\n                    />\r\n                </Form.Group>\r\n                <Button type=\"submit\">Sign Up</Button>\r\n            </Form>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default withRouter(SignUp);\r\n","import React, { Component } from \"react\";\r\nclass ErrorBoundary extends Component {\r\n    state = { hasError: false };\r\n\r\n    static getDerivedStateFromError(error) {\r\n        console.log(error);\r\n        return { hasError: true };\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1 className=\"text-center\">Well, something is not OK.</h1>;\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nconst PrivateRoute = ({ component: RouteComponent, currentUser, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={routeProps =>\r\n                !!currentUser ? (\r\n                    <RouteComponent {...routeProps} />\r\n                ) : (\r\n                    <Redirect to=\"/login\" />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\nconst mapStateToProps = ({ auth }) => ({ currentUser: auth.currentUser });\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./containers/Home\";\nimport Login from \"./components/Login\";\nimport SignUp from \"./components/SignUp\";\nimport ErrorBoundary from \"./containers/ErrorBoundary\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport firebase from \"./firebase\";\nimport { connect } from \"react-redux\";\nimport { clearCurrentUser, setCurrentUser } from \"./redux/authActions\";\nfunction App({ currentUser, setCurrentUser, clearCurrentUser }) {\n    useEffect(() => {\n        return firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                setCurrentUser(user);\n            } else {\n                clearCurrentUser();\n            }\n        });\n    }, [currentUser, setCurrentUser, clearCurrentUser]);\n    return (\n        <ErrorBoundary>\n            <Router basename='/firebase-saga-auth'>\n                <PrivateRoute exact path=\"/\" component={Home} />\n                <Route exact path=\"/login\" component={Login} />\n                <Route exact path=\"/signup\" component={SignUp} />\n            </Router>\n        </ErrorBoundary>\n    );\n}\n\nconst mapStateToProps = ({ auth }) => ({ currentUser: auth.currentUser });\n\nconst mapDispatchToProps = dispatch => ({\n    setCurrentUser: user => dispatch(setCurrentUser(user)),\n    clearCurrentUser: () => dispatch(clearCurrentUser())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { authTypes } from \"../constants/reduxActionTypes\";\r\n\r\nexport const setCurrentUser = user => {\r\n    return { type: authTypes.SET_CURRENT_USER, payload: user };\r\n};\r\nexport const clearCurrentUser = () => {\r\n    return { type: authTypes.CLEAR_CURRENT_USER };\r\n};\r\n","import { authTypes } from \"../constants/reduxActionTypes\";\r\n\r\nconst initialState = {\r\n    currentUser: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case authTypes.SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                currentUser: action.payload\r\n            };\r\n        case authTypes.CLEAR_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                currentUser: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;\r\n","import { modalTypes } from \"../constants/reduxActionTypes\";\r\n\r\nconst initialState = {\r\n    modal: {}\r\n};\r\n\r\nconst modalReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case modalTypes.SET_MODAL_CONTENT:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        case modalTypes.CLEAR_MODAL_CONTENT:\r\n            return {\r\n                modal: {}\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default modalReducer;\r\n","import { usersTypes } from \"../constants/reduxActionTypes\";\r\n\r\nconst initialState = {\r\n    users: []\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case usersTypes.SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.payload\r\n            };\r\n        case usersTypes.UPDATE_USER:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        case usersTypes.DELETE_USER:\r\n        case usersTypes.GET_USERS_DATA:\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default userReducer;\r\n","import { departmentTypes } from \"../constants/reduxActionTypes\";\r\n\r\nconst initialState = {\r\n    departments: []\r\n};\r\n\r\nconst departmentsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case departmentTypes.SET_DEPARTMENTS:\r\n            return {\r\n                ...state,\r\n                departments: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default departmentsReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport modalReducer from \"./modalReducer\";\r\nimport userReducer from \"./userReducer\";\r\nimport departmentsReducer from \"./departmentReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    modal: modalReducer,\r\n    data: userReducer,\r\n    departments: departmentsReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { departmentTypes } from \"../constants/reduxActionTypes\";\r\n\r\nexport const getDepartmentsArray = usersData => ({\r\n    type: departmentTypes.GET_DEPARTMENTS,\r\n    payload: usersData\r\n});\r\n\r\nexport const setDepartments = departments => ({\r\n    type: departmentTypes.SET_DEPARTMENTS,\r\n    payload: departments\r\n});\r\n","import { takeEvery, put, call } from \"redux-saga/effects\";\r\nimport { departmentTypes, usersTypes } from \"../constants/reduxActionTypes\";\r\nimport firebase from \"../firebase\";\r\nimport { getUsersData, setUsers } from \"./userActions\";\r\nimport { getDepartmentsArray, setDepartments } from \"./departmentActions\";\r\nimport { ejectUsersData } from \"../helpers/dataMapHelper\";\r\nimport { all } from \"@redux-saga/core/effects\";\r\n\r\nfunction createUser(newUser) {\r\n    return firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .add(newUser);\r\n}\r\n\r\nfunction updateUserData(newUserData) {\r\n    return firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .doc(newUserData.id)\r\n        .set(newUserData);\r\n}\r\n\r\nfunction fetchData() {\r\n    const db = firebase.firestore();\r\n    return db.collection(\"users\").get();\r\n}\r\n\r\nfunction deleteUser(id) {\r\n    return firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .doc(id)\r\n        .delete();\r\n}\r\n\r\nfunction findFireBaseUsers(name) {\r\n    const db = firebase.firestore();\r\n    return name\r\n        ? db\r\n              .collection(\"users\")\r\n              .where(\"empName\", \"==\", name)\r\n              .get()\r\n        : db.collection(\"users\").get();\r\n}\r\n\r\nfunction getDepartments(usersData) {\r\n    return [...new Set(usersData.map(user => user.empDepartment))];\r\n}\r\n\r\nfunction* workerGetUsers() {\r\n    const data = yield call(fetchData);\r\n    const usersData = ejectUsersData(data);\r\n    yield put(setUsers(usersData));\r\n    yield put(getDepartmentsArray(usersData));\r\n}\r\n\r\nfunction* watchGetUsers() {\r\n    yield takeEvery(usersTypes.GET_USERS_DATA, workerGetUsers);\r\n}\r\n\r\nfunction* workerDeleteUser({ payload }) {\r\n    yield call(deleteUser, payload);\r\n    yield put(getUsersData());\r\n}\r\n\r\nfunction* watchDeleteUser() {\r\n    yield takeEvery(usersTypes.DELETE_USER, workerDeleteUser);\r\n}\r\n\r\nfunction* workerCreateUser({ payload }) {\r\n    yield call(createUser, payload);\r\n    yield put(getUsersData());\r\n}\r\n\r\nfunction* watchCreateUser() {\r\n    yield takeEvery(usersTypes.CREATE_USER, workerCreateUser);\r\n}\r\n\r\nfunction* workerEditUser({ payload }) {\r\n    yield call(updateUserData, payload);\r\n    yield put(getUsersData());\r\n}\r\n\r\nfunction* watchUpdateUser() {\r\n    yield takeEvery(usersTypes.UPDATE_USER, workerEditUser);\r\n}\r\n\r\nfunction* workerSearchUsers({ payload }) {\r\n    const data = yield call(findFireBaseUsers, payload);\r\n    const usersData = ejectUsersData(data);\r\n    yield put(setUsers(usersData));\r\n}\r\n\r\nfunction* watchSearchUsers() {\r\n    yield takeEvery(usersTypes.SEARCH_USERS, workerSearchUsers);\r\n}\r\n\r\nfunction* workerGetDepartments({ payload }) {\r\n    const departments = yield call(getDepartments, payload);\r\n    yield put(setDepartments(departments));\r\n}\r\n\r\nfunction* watchGetDepartments() {\r\n    yield takeEvery(departmentTypes.GET_DEPARTMENTS, workerGetDepartments);\r\n}\r\n\r\nexport function* rootSaga() {\r\n    yield all([\r\n        watchGetUsers(),\r\n        watchDeleteUser(),\r\n        watchCreateUser(),\r\n        watchUpdateUser(),\r\n        watchGetDepartments(),\r\n        watchSearchUsers()\r\n    ]);\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { logger } from \"redux-logger\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport { rootSaga } from \"./sagas\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middlewares = [logger, sagaMiddleware];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(applyMiddleware(...middlewares))\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nconst rootElement = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n);\n\nReactDOM.render(rootElement, document.getElementById(\"root\"));\n"],"sourceRoot":""}